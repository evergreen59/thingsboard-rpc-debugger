name: Build Electron App

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 10
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Windows
        run: npm run build:win
      
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: dist/win-unpacked
          
      - name: Upload Windows installer
        uses: actions/upload-artifact@v3
        with:
          name: windows-installer
          path: dist/*.exe

  # 如果需要构建Mac版本，取消下面的注释
  # build-mac:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #         cache: 'npm'
  #     
  #     - name: Install dependencies
  #       run: npm ci
  #     
  #     - name: Build Mac
  #       run: npm run build:mac
  #     
  #     - name: Upload Mac artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: mac-build
  #         path: dist/*.dmg

  # 如果需要构建Linux版本，取消下面的注释
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Linux
        run: npm run build:linux
      
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: dist/*.AppImage

  release:
    needs: [build-windows, build-linux] # 如果启用了其他平台构建，添加: build-mac, build-linux
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-installer/*.exe
            # mac-build/*.dmg
            # linux-build/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}